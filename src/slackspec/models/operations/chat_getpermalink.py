"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Any, Optional


@dataclasses.dataclass
class ChatGetPermalinkSecurity:
    
    slack_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})
    

@dataclasses.dataclass
class ChatGetPermalinkRequest:
    
    channel: str = dataclasses.field(metadata={'query_param': { 'field_name': 'channel', 'style': 'form', 'explode': True }})
    r"""The ID of the conversation or channel containing the message"""
    message_ts: str = dataclasses.field(metadata={'query_param': { 'field_name': 'message_ts', 'style': 'form', 'explode': True }})
    r"""A message's `ts` value, uniquely identifying it within a channel"""
    token: str = dataclasses.field(metadata={'query_param': { 'field_name': 'token', 'style': 'form', 'explode': True }})
    r"""Authentication token. Requires scope: `none`"""
    

@dataclasses.dataclass
class ChatGetPermalinkResponse:
    
    content_type: str = dataclasses.field()
    status_code: int = dataclasses.field()
    chat_get_permalink_error_schema: Optional[dict[str, dict[str, Any]]] = dataclasses.field(default=None)
    r"""Error response when channel cannot be found"""
    chat_get_permalink_success_schema: Optional[dict[str, dict[str, Any]]] = dataclasses.field(default=None)
    r"""Standard success response"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    