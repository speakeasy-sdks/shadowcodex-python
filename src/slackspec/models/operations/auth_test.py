"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Any, Optional


@dataclasses.dataclass
class AuthTestSecurity:
    
    slack_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})
    

@dataclasses.dataclass
class AuthTestRequest:
    
    token: str = dataclasses.field(metadata={'header': { 'field_name': 'token', 'style': 'simple', 'explode': False }})
    r"""Authentication token. Requires scope: `none`"""
    

@dataclasses.dataclass
class AuthTestResponse:
    
    content_type: str = dataclasses.field()
    status_code: int = dataclasses.field()
    auth_test_error_schema: Optional[dict[str, dict[str, Any]]] = dataclasses.field(default=None)
    r"""Standard failure response when used with an invalid token"""
    auth_test_success_schema: Optional[dict[str, dict[str, Any]]] = dataclasses.field(default=None)
    r"""Standard success response when used with a user token"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    