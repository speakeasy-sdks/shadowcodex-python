"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Any, Optional


@dataclasses.dataclass
class ConversationsMembersSecurity:
    
    slack_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})
    

@dataclasses.dataclass
class ConversationsMembersRequest:
    
    channel: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'channel', 'style': 'form', 'explode': True }})
    r"""ID of the conversation to retrieve members for"""
    cursor: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'cursor', 'style': 'form', 'explode': True }})
    r"""Paginate through collections of data by setting the `cursor` parameter to a `next_cursor` attribute returned by a previous request's `response_metadata`. Default value fetches the first \\"page\\" of the collection. See [pagination](/docs/pagination) for more detail."""
    limit: Optional[int] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'limit', 'style': 'form', 'explode': True }})
    r"""The maximum number of items to return. Fewer than the requested number of items may be returned, even if the end of the users list hasn't been reached."""
    token: Optional[str] = dataclasses.field(default=None, metadata={'query_param': { 'field_name': 'token', 'style': 'form', 'explode': True }})
    r"""Authentication token. Requires scope: `conversations:read`"""
    

@dataclasses.dataclass
class ConversationsMembersResponse:
    
    content_type: str = dataclasses.field()
    status_code: int = dataclasses.field()
    conversations_members_error_schema: Optional[dict[str, dict[str, Any]]] = dataclasses.field(default=None)
    r"""Typical error response when an invalid cursor is provided"""
    conversations_members_success_schema: Optional[dict[str, dict[str, Any]]] = dataclasses.field(default=None)
    r"""Typical paginated success response"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    