"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Any, Optional


@dataclasses.dataclass
class FilesRemoteAddSecurity:
    
    slack_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})
    

@dataclasses.dataclass
class FilesRemoteAddRequestBody:
    
    external_id: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'external_id' }})
    r"""Creator defined GUID for the file."""
    external_url: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'external_url' }})
    r"""URL of the remote file."""
    filetype: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'filetype' }})
    r"""type of file"""
    indexable_file_contents: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'indexable_file_contents' }})
    r"""A text file (txt, pdf, doc, etc.) containing textual search terms that are used to improve discovery of the remote file."""
    preview_image: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'preview_image' }})
    r"""Preview of the document via `multipart/form-data`."""
    title: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'title' }})
    r"""Title of the file being shared."""
    token: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'token' }})
    r"""Authentication token. Requires scope: `remote_files:write`"""
    

@dataclasses.dataclass
class FilesRemoteAddResponse:
    
    content_type: str = dataclasses.field()
    status_code: int = dataclasses.field()
    default_error_template: Optional[dict[str, dict[str, Any]]] = dataclasses.field(default=None)
    r"""Typical error response"""
    default_success_template: Optional[dict[str, dict[str, Any]]] = dataclasses.field(default=None)
    r"""Typical success response"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    