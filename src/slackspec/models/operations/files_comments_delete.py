"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from slackspec import utils
from typing import Any, Optional


@dataclasses.dataclass
class FilesCommentsDeleteSecurity:
    
    slack_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class FilesCommentsDeleteApplicationJSON:
    
    file: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('file'), 'exclude': lambda f: f is None }})
    r"""File to delete a comment from."""
    id: Optional[str] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('id'), 'exclude': lambda f: f is None }})
    r"""The comment to delete."""
    

@dataclasses.dataclass
class FilesCommentsDeleteRequest:
    
    request_body: Optional[FilesCommentsDeleteApplicationJSON] = dataclasses.field(default=None, metadata={'request': { 'media_type': 'application/json' }})
    token: Optional[str] = dataclasses.field(default=None, metadata={'header': { 'field_name': 'token', 'style': 'simple', 'explode': False }})
    r"""Authentication token. Requires scope: `files:write:user`"""
    

@dataclasses.dataclass
class FilesCommentsDeleteResponse:
    
    content_type: str = dataclasses.field()
    status_code: int = dataclasses.field()
    files_comments_delete_error_schema: Optional[dict[str, dict[str, Any]]] = dataclasses.field(default=None)
    r"""Standard failure response when used with an invalid token"""
    files_comments_delete_schema: Optional[dict[str, dict[str, Any]]] = dataclasses.field(default=None)
    r"""Standard success response is very simple"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    