"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from typing import Any, Optional


@dataclasses.dataclass
class UsersSetPhotoSecurity:
    
    slack_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})
    

@dataclasses.dataclass
class UsersSetPhotoRequestBody:
    
    token: str = dataclasses.field(metadata={'form': { 'field_name': 'token' }})
    r"""Authentication token. Requires scope: `users.profile:write`"""
    crop_w: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'crop_w' }})
    r"""Width/height of crop box (always square)"""
    crop_x: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'crop_x' }})
    r"""X coordinate of top-left corner of crop box"""
    crop_y: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'crop_y' }})
    r"""Y coordinate of top-left corner of crop box"""
    image: Optional[str] = dataclasses.field(default=None, metadata={'form': { 'field_name': 'image' }})
    r"""File contents via `multipart/form-data`."""
    

@dataclasses.dataclass
class UsersSetPhotoResponse:
    
    content_type: str = dataclasses.field()
    status_code: int = dataclasses.field()
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    users_set_photo_error_schema: Optional[dict[str, dict[str, Any]]] = dataclasses.field(default=None)
    r"""Typical error response"""
    users_set_photo_schema: Optional[dict[str, dict[str, Any]]] = dataclasses.field(default=None)
    r"""Typical success response"""
    