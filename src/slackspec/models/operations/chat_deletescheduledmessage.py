"""Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT."""

from __future__ import annotations
import dataclasses
import requests as requests_http
from dataclasses_json import Undefined, dataclass_json
from slackspec import utils
from typing import Any, Optional


@dataclasses.dataclass
class ChatDeleteScheduledMessageSecurity:
    
    slack_auth: str = dataclasses.field(metadata={'security': { 'scheme': True, 'type': 'oauth2', 'field_name': 'Authorization' }})
    

@dataclass_json(undefined=Undefined.EXCLUDE)
@dataclasses.dataclass
class ChatDeleteScheduledMessageApplicationJSON:
    
    channel: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('channel') }})
    r"""The channel the scheduled_message is posting to"""
    scheduled_message_id: str = dataclasses.field(metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('scheduled_message_id') }})
    r"""`scheduled_message_id` returned from call to chat.scheduleMessage"""
    as_user: Optional[bool] = dataclasses.field(default=None, metadata={'dataclasses_json': { 'letter_case': utils.get_field_name('as_user'), 'exclude': lambda f: f is None }})
    r"""Pass true to delete the message as the authed user with `chat:write:user` scope. [Bot users](/bot-users) in this context are considered authed users. If unused or false, the message will be deleted with `chat:write:bot` scope."""
    

@dataclasses.dataclass
class ChatDeleteScheduledMessageRequest:
    
    request_body: ChatDeleteScheduledMessageApplicationJSON = dataclasses.field(metadata={'request': { 'media_type': 'application/json' }})
    token: str = dataclasses.field(metadata={'header': { 'field_name': 'token', 'style': 'simple', 'explode': False }})
    r"""Authentication token. Requires scope: `chat:write`"""
    

@dataclasses.dataclass
class ChatDeleteScheduledMessageResponse:
    
    content_type: str = dataclasses.field()
    status_code: int = dataclasses.field()
    chat_delete_scheduled_message_error_schema: Optional[dict[str, dict[str, Any]]] = dataclasses.field(default=None)
    r"""Typical error response if no message is found"""
    chat_delete_scheduled_message_schema: Optional[dict[str, dict[str, Any]]] = dataclasses.field(default=None)
    r"""Typical success response"""
    raw_response: Optional[requests_http.Response] = dataclasses.field(default=None)
    